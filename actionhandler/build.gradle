apply plugin: 'com.android.library'

ext {
    libraryVersionMajor = 2
    libraryVersionMinor = 1
    libraryVersionRevision = 3

    libraryVersion = libraryVersionMajor + '.' + libraryVersionMinor + '.' + libraryVersionRevision

    bintrayRepo = 'android-extended'
    bintrayName = 'action-handler'

    publishedGroupId = 'com.drextended.actionhandler'
    libraryName = 'ActionHandler'
    artifact = 'actionhandler'

    libraryDescription = 'Easy action handling in your android project!'

    siteUrl = 'https://github.com/drstranges/ActionHandler'
    gitUrl = 'https://github.com/drstranges/ActionHandler.git'

    developerId = 'drstranges'
    developerName = 'Roman Donchenko'
    developerEmail = 'drstranges@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    dataBinding {
        enabled = true
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode libraryVersionRevision
        versionName libraryVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation "androidx.annotation:annotation:$x_annotation_version"
    compileOnly "androidx.appcompat:appcompat:$x_appcompat_version"
    compileOnly "io.reactivex.rxjava2:rxjava:$rxjava2_version"
    compileOnly "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'

task androidJavaDoc (type: Javadoc, dependsOn: "assembleRelease") {
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        android.libraryVariants.all { variant ->
            if (variant.name == 'release') {
                owner.classpath += variant.javaCompile.classpath
            }
        }
        source = android.sourceSets.main.java.srcDirs
        exclude '**/R.html', '**/R.*.html', '**/index.html'
}